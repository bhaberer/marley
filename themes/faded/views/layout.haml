!!!
%html{ "xml:lang" => "en", :lang => "en", :xmlns => "http://www.w3.org/1999/xhtml" }
  %head
    %meta{'http-equiv' => "Content-Type", :content => "text/html; charset=utf-8"}
    %title 
      = h(@page_title) 
    - if Marley::Configuration.ga_code && Sinatra::Application.environment == :production
      :javascript
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', #{Marley::Configuration.ga_code}]);
        _gaq.push(['_trackPageview']);
     
        (function() {
        var ga = document.createElement('script');
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        ga.setAttribute('async', 'true');
        document.documentElement.firstChild.appendChild(ga);
        })();
    %link{:href => "http://#{hostname}/feed", :rel => "alternate",
          :title => "Feed for #{h(Marley::Configuration.blog.title)}", :type => "application/atom+xml"}
    %link{:href => 'http://fonts.googleapis.com/css?family=Inconsolata', :rel => 'stylesheet', :type => 'text/css'}
    %script{:type => "text/javascript",
            :src => "http://code.jquery.com/jquery-1.4.2.min.js"}
    %script{:type => "text/javascript", 
            :src => "http://platform.twitter.com/anywhere.js?id=6M5ZrrMRGIMXxIrdnyS38g&amp;v=1"}
    %script{:type => "text/javascript", :src => "/javascripts/application.js" }
    %script{:type => "text/javascript", :src => '/javascripts/sh_main.min.js' }
    %script{:type => "text/javascript", :src => '/javascripts/sh_ruby.min.js' }
    %link{:href => "http://#{hostname}/feed/comments", :rel => "alternate", 
          :title => "Comments for #{h(Marley::Configuration.blog.title)}", :type => "application/atom+xml"}
    - if @post 
      %link{:href => "http://#{hostname}/#{@post.id}/feed", :rel => "alternate", 
      :title => "Feed for comments on article &ldquo;#{h(@post.title)}&rdquo; #{h(Marley::Configuration.blog.title)}",
      :type => "application/atom+xml"}
    %link{:rel => "stylesheet", :href => "/stylesheets/faded.css", :type => "text/css", :media => "screen"}
  %body
    .container
      = yield
